version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: whiteboard_db
    environment:
      POSTGRES_DB: whiteboard_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Test Database
  db_test:
    image: postgres:15
    container_name: whiteboard_db_test
    environment:
      POSTGRES_DB: whiteboard_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: whiteboard_backend
    volumes:
      - ./backend:/app
      - /app/__pycache__
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/whiteboard_dev
      - TEST_DATABASE_URL=postgresql://postgres:postgres@db_test:5432/whiteboard_test
      - ENVIRONMENT=development
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      db_test:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: whiteboard_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000/ws
    env_file:
      - .env
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:

networks:
  default:
    name: whiteboard_network